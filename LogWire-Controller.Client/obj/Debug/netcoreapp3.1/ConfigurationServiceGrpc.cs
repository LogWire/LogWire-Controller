// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ConfigurationService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace LogWire.Controller.Services {
  public static partial class ConfigurationService
  {
    static readonly string __ServiceName = "ConfigurationService";

    static readonly grpc::Marshaller<global::LogWire.Controller.Services.ConfigurationMessage> __Marshaller_ConfigurationMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LogWire.Controller.Services.ConfigurationMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LogWire.Controller.Services.ConfigurationStatusMessage> __Marshaller_ConfigurationStatusMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LogWire.Controller.Services.ConfigurationStatusMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::LogWire.Controller.Services.ConfigurationKeyMessage> __Marshaller_ConfigurationKeyMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::LogWire.Controller.Services.ConfigurationKeyMessage.Parser.ParseFrom);

    static readonly grpc::Method<global::LogWire.Controller.Services.ConfigurationMessage, global::LogWire.Controller.Services.ConfigurationStatusMessage> __Method_AddConfiguration = new grpc::Method<global::LogWire.Controller.Services.ConfigurationMessage, global::LogWire.Controller.Services.ConfigurationStatusMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddConfiguration",
        __Marshaller_ConfigurationMessage,
        __Marshaller_ConfigurationStatusMessage);

    static readonly grpc::Method<global::LogWire.Controller.Services.ConfigurationKeyMessage, global::LogWire.Controller.Services.ConfigurationMessage> __Method_GetConfigurationValue = new grpc::Method<global::LogWire.Controller.Services.ConfigurationKeyMessage, global::LogWire.Controller.Services.ConfigurationMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetConfigurationValue",
        __Marshaller_ConfigurationKeyMessage,
        __Marshaller_ConfigurationMessage);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::LogWire.Controller.Services.ConfigurationServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for ConfigurationService</summary>
    public partial class ConfigurationServiceClient : grpc::ClientBase<ConfigurationServiceClient>
    {
      /// <summary>Creates a new client for ConfigurationService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ConfigurationServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ConfigurationService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ConfigurationServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ConfigurationServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ConfigurationServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::LogWire.Controller.Services.ConfigurationStatusMessage AddConfiguration(global::LogWire.Controller.Services.ConfigurationMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddConfiguration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LogWire.Controller.Services.ConfigurationStatusMessage AddConfiguration(global::LogWire.Controller.Services.ConfigurationMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddConfiguration, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LogWire.Controller.Services.ConfigurationStatusMessage> AddConfigurationAsync(global::LogWire.Controller.Services.ConfigurationMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddConfigurationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LogWire.Controller.Services.ConfigurationStatusMessage> AddConfigurationAsync(global::LogWire.Controller.Services.ConfigurationMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddConfiguration, null, options, request);
      }
      public virtual global::LogWire.Controller.Services.ConfigurationMessage GetConfigurationValue(global::LogWire.Controller.Services.ConfigurationKeyMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConfigurationValue(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::LogWire.Controller.Services.ConfigurationMessage GetConfigurationValue(global::LogWire.Controller.Services.ConfigurationKeyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetConfigurationValue, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::LogWire.Controller.Services.ConfigurationMessage> GetConfigurationValueAsync(global::LogWire.Controller.Services.ConfigurationKeyMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConfigurationValueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::LogWire.Controller.Services.ConfigurationMessage> GetConfigurationValueAsync(global::LogWire.Controller.Services.ConfigurationKeyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetConfigurationValue, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ConfigurationServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ConfigurationServiceClient(configuration);
      }
    }

  }
}
#endregion
